#include "RSHead.h"
namespace py = pybind11;

void bindRSLight(py::module&m)
{
	py::class_<RSLight, std::unique_ptr<RSLight, py::nodelete>>(m, "RSLight")
		.def("GetName", &RSLight::GetName)
		.def("SetName", &RSLight::SetName)
		.def("SetType", &RSLight::SetType)
		.def("GetType", &RSLight::GetType)
		.def("SetEnabled", &RSLight::SetEnabled)
		.def("GetEnabled", &RSLight::GetEnabled)
		.def("SetContributesToDiffuse", &RSLight::SetContributesToDiffuse)
		.def("GetContributesToDiffuse", &RSLight::GetContributesToDiffuse)
		.def("SetContributesToSpecular", &RSLight::SetContributesToSpecular)
		.def("GetContributesToSpecular", &RSLight::GetContributesToSpecular)
		.def("SetAreaVisibleInRender", &RSLight::SetAreaVisibleInRender)
		.def("GetAreaVisibleInRender", &RSLight::GetAreaVisibleInRender)
		.def("SetAreaGeometry", &RSLight::SetAreaGeometry)
		.def("GetAreaGeometry", &RSLight::GetAreaGeometry)
		.def("SetNormalizeEnabled", &RSLight::SetNormalizeEnabled)
		.def("GetNormalizeEnabled", &RSLight::GetNormalizeEnabled)
		.def("SetBiDirectional", &RSLight::SetBiDirectional)
		.def("GetBiDirectional", &RSLight::GetBiDirectional)
		.def("SetAreaNumSamples", &RSLight::SetAreaNumSamples)
		.def("GetAreaNumSamples", &RSLight::GetAreaNumSamples)
		.def("SetAreaScaling", &RSLight::SetAreaScaling)
		.def("GetAreaScaling", &RSLight::GetAreaScaling)
		.def("SetAreaRotation", &RSLight::SetAreaRotation)
		.def("GetAreaRotation", &RSLight::GetAreaRotation)
		.def("SetAreaSpread", &RSLight::SetAreaSpread)
		.def("GetAreaSpread", &RSLight::GetAreaSpread)
		.def("SetMatteIlluminator", &RSLight::SetMatteIlluminator)
		.def("GetMatteIlluminator", &RSLight::GetMatteIlluminator)
		.def("SetDiffuseRayContributionScale", &RSLight::SetDiffuseRayContributionScale)
		.def("GetDiffuseRayContributionScale", &RSLight::GetDiffuseRayContributionScale)
		.def("SetGlossyRayContributionScale", &RSLight::SetGlossyRayContributionScale)
		.def("GetGlossyRayContributionScale", &RSLight::GetGlossyRayContributionScale)
		.def("SetVolumeRayContributionScale", &RSLight::SetVolumeRayContributionScale)
		.def("GetVolumeRayContributionScale", &RSLight::GetVolumeRayContributionScale)
		.def("SetSingleScatteringRayContributionScale", &RSLight::SetSingleScatteringRayContributionScale)
		.def("GetSingleScatteringRayContributionScale", &RSLight::GetSingleScatteringRayContributionScale)
		.def("SetMultipleScatteringRayContributionScale", &RSLight::SetMultipleScatteringRayContributionScale)
		.def("GetMultipleScatteringRayContributionScale", &RSLight::GetMultipleScatteringRayContributionScale)
		.def("SetIndirectRayContributionScale", &RSLight::SetIndirectRayContributionScale)
		.def("GetIndirectRayContributionScale", &RSLight::GetIndirectRayContributionScale)
		.def("SetVolumeSamples", &RSLight::SetVolumeSamples)
		.def("GetVolumeSamples", &RSLight::GetVolumeSamples)
		.def("SetSpotConeAngle", &RSLight::SetSpotConeAngle)
		.def("GetSpotConeAngle", &RSLight::GetSpotConeAngle)
		.def("SetSoftnessAffectsGobo", &RSLight::SetSoftnessAffectsGobo)
		.def("GetSoftnessAffectsGobo", &RSLight::GetSoftnessAffectsGobo)
		.def("SetDomeHorizontalFlip", &RSLight::SetDomeHorizontalFlip)
		.def("GetDomeHorizontalFlipEnabled", &RSLight::GetDomeHorizontalFlipEnabled)
		.def("SetAreaEnabled", &RSLight::SetAreaEnabled)
		.def("GetAreaEnabled", &RSLight::GetAreaEnabled)
		.def("SetGIEnabled", &RSLight::SetGIEnabled)
		.def("GetGIEnabled", &RSLight::GetGIEnabled)
		.def("SetPhotonGIIntensityMultiplier", &RSLight::SetPhotonGIIntensityMultiplier)
		.def("GetPhotonGIIntensityMultiplier", &RSLight::GetPhotonGIIntensityMultiplier)
		.def("SetPhotonGINumPhotons", &RSLight::SetPhotonGINumPhotons)
		.def("GetPhotonGINumPhotons", &RSLight::GetPhotonGINumPhotons)
		.def("SetCausticsEnabled", &RSLight::SetCausticsEnabled)
		.def("GetCausticsEnabled", &RSLight::GetCausticsEnabled)
		.def("SetPhotonCausticsIntensityMultiplier", &RSLight::SetPhotonCausticsIntensityMultiplier)
		.def("GetPhotonCausticsIntensityMultiplier", &RSLight::GetPhotonCausticsIntensityMultiplier)
		.def("SetPhotonCausticsNumPhotons", &RSLight::SetPhotonCausticsNumPhotons)
		.def("GetPhotonCausticsNumPhotons", &RSLight::GetPhotonCausticsNumPhotons)
		.def("SetPhotonEnergyColor", &RSLight::SetPhotonEnergyColor)
		.def("SetPhotonColorIsScaledNotReplaced", &RSLight::SetPhotonColorIsScaledNotReplaced)
		.def("SetPhotonIntensityMultiplier", &RSLight::SetPhotonIntensityMultiplier)
		.def("SetDirectLightingShader", &RSLight::SetDirectLightingShader)
		.def("SetPhotonEmitterShader", &RSLight::SetPhotonEmitterShader)
		.def("SetIsTransformationBlurred", &RSLight::SetIsTransformationBlurred)
		.def("IsTransformationBlurred", &RSLight::IsTransformationBlurred)
		.def("GetNumTransformationSteps", &RSLight::GetNumTransformationSteps)
		.def("SetMatrix", &RSLight::SetMatrix,py::arg("mtx"), py::arg("stepID") = -1)
		.def("GetMatrix", py::overload_cast<>(&RSLight::GetMatrix, py::const_))
		.def("GetMatrix", py::overload_cast<unsigned int>(&RSLight::GetMatrix, py::const_))
		.def("ClearMeshLightTrianglePositionAndNormals", &RSLight::ClearMeshLightTrianglePositionAndNormals)
		.def("AddMeshLightTrianglePositionAndNormals", &RSLight::AddMeshLightTrianglePositionAndNormals)
		.def("GetGClearMeshLightTriangleUVsIEnabled", &RSLight::ClearMeshLightTriangleUVs)
		.def("AddMeshLightTriangleUVs", &RSLight::AddMeshLightTriangleUVs)
		.def("SetMeshUVWrappingMode", &RSLight::SetMeshUVWrappingMode)
		.def("SetLightLinkTraceSet", &RSLight::SetLightLinkTraceSet)
		.def("SetShadowLinkTraceSet", &RSLight::SetShadowLinkTraceSet)
		.def("GetLightLinkTraceSet", &RSLight::GetLightLinkTraceSet)
		.def("GetShadowLinkTraceSet", &RSLight::GetShadowLinkTraceSet)
		.def("SetAOVLightGroupName", &RSLight::SetAOVLightGroupName)
		.def("GetAOVLightGroupName", &RSLight::GetAOVLightGroupName)
		.def("SetAffectedByRefraction", &RSLight::SetAffectedByRefraction)
		.def("GetAffectedByRefraction", &RSLight::GetAffectedByRefraction)
		.def("SetIndirectMaxTraceDepth", &RSLight::SetIndirectMaxTraceDepth)
		.def("GetIndirectMaxTraceDepth", &RSLight::GetIndirectMaxTraceDepth);

	m.def("RS_Light_New", &RS_Light_New, py::return_value_policy::reference);
	m.def("RS_Light_Delete", &RS_Light_Delete);

	py::class_<RSIESLightShape>(m, "RSIESLightShape")
		.def(py::init<>())
		.def_readwrite("m_numHorizontalAngles", &RSIESLightShape::m_numHorizontalAngles)
		.def_readwrite("m_numVerticalAngles", &RSIESLightShape::m_numVerticalAngles)
		.def_readwrite("m_vertices", &RSIESLightShape::m_vertices);

	m.def("RS_IESLightProfile_GetShape", &RS_IESLightProfile_GetShape);
}